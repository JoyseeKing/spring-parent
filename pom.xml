<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>
    <groupId>io.github.mingyang66</groupId>
    <artifactId>emily-sdk</artifactId>
    <version>4.4.3</version>
    <name>emily-sdk</name>
    <description>emily-sdk基础框架</description>
    <url>https://github.com/mingyang66/spring-parent</url>
    <!--模块聚合-->
    <modules>
        <module>emily-spring-boot-logger</module>
        <module>emily-spring-boot-core</module>
        <module>emily-spring-boot-redis</module>
        <module>emily-spring-boot-datasource</module>
        <module>emily-spring-boot-starter</module>
        <module>emily-spring-cloud-starter</module>
        <module>emily-spring-boot-rabbitmq</module>
        <module>demo-emily-spring-cloud</module>
        <module>demo-emily-spring-boot</module>
        <module>emily-spring-boot-parent</module>
        <module>oceansky-json</module>
        <module>oceansky-language</module>
        <module>oceansky-sensitive</module>
        <module>oceansky-captcha</module>
        <module>oceansky-jwt</module>
        <module>oceansky-date</module>
        <module>oceansky-common</module>
        <module>oceansky-logger</module>
    </modules>

    <properties>
        <!--JDK版本-->
        <java.version>17</java.version>
        <!--源代码使用的JDK版本-->
        <maven.compiler.source>17</maven.compiler.source>
        <!--需要生成的目标class文件的编译版本-->
        <maven.compiler.target>17</maven.compiler.target>
        <!--maven项目源代码编码格式，参考：https://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html-->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <commons-io.version>2.11.0</commons-io.version>
        <commons-lang3.version>3.14.0</commons-lang3.version>
        <google-guava.version>32.1.0-jre</google-guava.version>
        <alibaba-ttl.version>2.14.5</alibaba-ttl.version>
        <jackson.version>2.17.1</jackson.version>
        <junit5-test.version>5.10.1</junit5-test.version>
        <java-jwt.version>4.4.0</java-jwt.version>
        <bcprov-jdk15on.version>1.70</bcprov-jdk15on.version>
        <logback.version>1.5.6</logback.version>
        <slf4j.version>2.0.13</slf4j.version>
        <jansi.version>2.4.0</jansi.version>
    </properties>

    <developers>
        <developer>
            <name>Emily</name>
            <email>mingyangsky@foxmail.com</email>
            <organization>个人基础设施项目建设</organization>
            <organizationUrl>https://github.com/mingyang66/spring-parent</organizationUrl>
        </developer>
    </developers>


    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson.datatype</groupId>
                <artifactId>jackson-datatype-jsr310</artifactId>
                <version>${jackson.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>${alibaba-ttl.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${google-guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${junit5-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit5-test.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.auth0</groupId>
                <artifactId>java-jwt</artifactId>
                <version>${java-jwt.version}</version>
            </dependency>
            <!--JWT RSA秘钥对生成，非PKCS8转换-->
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bcprov-jdk15on.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.fusesource.jansi</groupId>
                <artifactId>jansi</artifactId>
                <version>${jansi.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!--开源协议...-->
    <licenses>
        <license>
            <name>The Apache License, Version 2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
        </license>
    </licenses>

    <scm>
        <connection>scm:git:https://github.com/mingyang66/spring-parent.git</connection>
        <developerConnection>scm:git:ssh://github.com:mingyang66/spring-parent.git</developerConnection>
        <url>https://github.com/mingyang66/spring-parent</url>
    </scm>


    <distributionManagement>
        <snapshotRepository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/content/repositories/snapshots</url>
        </snapshotRepository>
        <repository>
            <id>ossrh</id>
            <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
        </repository>
    </distributionManagement>

    <build>
        <plugins>
            <!-- 发布到中央仓库插件 -->
            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.7.0</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>ossrh</serverId>
                    <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.3.0</version>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!--注意,此id必须与setting.xml中指定的一致,不要自作聪明改它名字-->
            <id>source</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- 生成源码插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <version>3.3.0</version>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!--构建过程中生成源码包，并将其附加到maven项目中-->
                            <attach>true</attach>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-compiler-plugin</artifactId>
                        <version>3.11.0</version>
                        <configuration>
                            <!--Maven编译后保留方法名-->
                            <parameters>true</parameters>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>javadoc</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- 生成API文档插件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <version>3.5.0</version>
                        <configuration>
                            <!--控制构建过程中如果出现错误是否停止构建-->
                            <failOnError>false</failOnError>
                            <!--排除指定的包，可以使用: or , or ; 三种符号分割-->
                            <excludePackageNames>com.emily.cloud.test.*,com.emily.infrastructure.test.*
                            </excludePackageNames>
                        </configuration>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>gpg</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <!-- 使用GnuPG签署项目的所有附加工件 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.1.0</version>
                        <executions>
                            <execution>
                                <id>sign-artifacts</id>
                                <phase>verify</phase>
                                <goals>
                                    <!--使用GunPG对项目工件、POM和附加工件进行签名以进行部署-->
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>
