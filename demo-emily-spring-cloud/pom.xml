<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>emily-spring-boot-parent</artifactId>
        <groupId>io.github.mingyang66</groupId>
        <version>4.3.8</version>
        <relativePath>../emily-spring-boot-parent/pom.xml</relativePath>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <version>4.3.8</version>
    <name>demo-emily-spring-cloud</name>
    <artifactId>demo-emily-spring-cloud</artifactId>

    <dependencies>
        <dependency>
            <groupId>io.github.mingyang66</groupId>
            <artifactId>emily-spring-boot-starter</artifactId>
            <version>4.3.8</version>
        </dependency>
        <dependency>
            <groupId>io.github.mingyang66</groupId>
            <artifactId>emily-spring-cloud-starter</artifactId>
            <version>4.3.8</version>
        </dependency>
        <dependency>
            <groupId>io.github.mingyang66</groupId>
            <artifactId>emily-spring-boot-datasource</artifactId>
            <version>4.3.8</version>
        </dependency>
        <!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-actuator -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
        </dependency>
        <dependency>
            <!-- websocket -->
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-websocket</artifactId>
        </dependency>
        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>
    </dependencies>

    <build>
        <finalName>cloud-sdk</finalName>
        <!--指定资源目录，参考：https://maven.apache.org/plugins/maven-resources-plugin/index.html-->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <!--资源文件中可以包含变量，表示为${...}或@...@，可以是系统变量，项目变量、过滤器资源、命令行
                参考：https://maven.apache.org/plugins/maven-resources-plugin/examples/filter.html
                -->
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <!--资源处理插件，用于将项目中的资源文件（如：配置文件、模板文件等）复制到目标目录中。在复制过程中，插件可以对资源文件进行过滤和替换，
            例如：将${variable}替换为实际值。默认情况下会对所有资源文件进行过滤和替换。
            -->
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>3.2.0</version>
                <configuration>
                    <!--插件将默认使用project.build.sourceEncoding设置的系统编码，有时为了不同的目的需要显式指定编码，参考：https://maven.apache.org/plugins/maven-resources-plugin/examples/encoding.html-->
                    <encoding>utf-8</encoding>
                    <!-- 解决Spring boot引起的profile失效问题 -->
                    <useDefaultDelimiters>true</useDefaultDelimiters>
                    <!-- 用于指定哪些文件不需要过滤和替换，可以提高构建效率，减少不必要的文件处理操作，参考：https://maven.apache.org/plugins/maven-resources-plugin/examples/binaries-filtering.html -->
                    <nonFilteredFileExtensions>
                        <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                        <nonFilteredFileExtension>cer</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                        <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                    </nonFilteredFileExtensions>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>